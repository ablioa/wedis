目前的情况
----
   1. 指令编码可以进行，但是对长指令的处理，中间可能会有那些问题的调研，还没完成。
   2. 数据库-节点树的操作基础调研完成，未能绑定业务数据。[DONE]
   3. 指令解码未完成 [DONE]
   4. 数据编辑器未完成，准备实行的方案未确定。[DONE]
   5. spliter的交互逻辑未完成 [DELAY]
   6. 连接管理没有完成
   7. view对象，TcpClient对象没有改造完成。[DONE]
   8. config设计方案没有确定。[DONE]
   9. 工具栏的和书节点的选择交互逻辑未确定
      - 选中连接节点时工具栏的状态
      - 选中数据库节点时工具栏的状态
      - 选中数据节点时工具栏的状态 
  10. 整体外观设计
  11. 资源文件的多语言版本 [DELAY]
  12. 多语言版本的实时控制 [DELAY]
  13. 页面布局的动态适配，计算逻辑优化，现在都是通过硬编码进行布局计算的。
  14. 连接管理机制
  15. MDI的窗口机制引入

-------
1. 选中数据节点时，在数据区展示数据的类型，数据的键值。
2. 文本数据，下拉框中展示可用的显示方式。
  - 二进制
  - json
  - 文本

3. 数据根据不同的类型，导出成不同的方式
  - 二进制方式
  - json
  - csv

4. 布局设计
  - 数据节点上的操作，怎么规划
  - 数据库节点上的操作，怎么规划
5. 网络功能增强
  - 多连接支持
  - 断线支持
    - 心跳包功能加入

6. 数据增强
  - 数据传输支持大容量的数据。
  - 操作交互支持大容量的数据。

7. 连接配置
  - 新增连接的配置和保存
  - SSL连接的支持

8. 不同数据类型的操作支持
  - 字符串，整数，列表，hash,set,zset

9. 性能监控维度的支持

10. 数据Key的过滤机制，这么应对大量key的问题？

11. 中英文支持
--------

## 关于redis被攻击后怎么恢复的问题

## 关于redis的操作

### zset的操作
   zadd wangzh 1 redis
   zadd name   2 redis
   zadd age    2 waht
   zadd times  3 addd
  
   ### 查看ZSET里的所有元素
   zrange names 0 -1 withscores

## 包的通知机制

1. listner收到包负责组装通信数据，如果发现能够解析出有效的业务数据，再通知业务方。

RedisClient
   send
   receive
   dispatch

@101
   ShellExecute(_hwnd,"open","dev.exe","","",SW_NORMAL);


        // case WM_PAINT:{
		// 	PAINTSTRUCT _paint;
		// 	BeginPaint(hwnd, &_paint);
		// 	EndPaint(hwnd, &_paint);
		// 	break;
        // }

3. 关于redis的密码认证
   -----------------------
   1、初始化Redis密码,在配置文件中配置,重启生效。
      requirepass test123；
   redis的查询速度是非常快的，外部用户一秒内可以尝试多大150K个密码；所以密码要尽量长（对于DBA 没有必要必须记住密码）；

   2、不重启Redis设置密码：
   config set requirepass test123
   config get requirepass
   auth test123

   3、登陆有密码的Redis：
   redis-cli -p 6379 -a test123

   -----------------------


   gdb的操作
   ---
   1. 设置断点 b main.c:352
   2. 下一步   n(next)





   #####

   配置项
   1. 加载默认页数
   2. 自动刷新
   3. 显示帮助信息
   4. 记录通信日志